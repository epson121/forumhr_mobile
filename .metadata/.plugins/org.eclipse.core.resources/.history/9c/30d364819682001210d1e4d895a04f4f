package com.example.fhr;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

public class ThreadsActivity extends Activity {
	
	private ListView threadList;
	private ForumThread[] moreThreads; 
	protected String topicUrl;
	protected String topicName;
	protected ForumThreadParser fthp, moreFthp;
	protected ForumThread[] fth;
	protected int count;
	private BaseDialogActivity bda;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_thread);
		final Bundle b = getIntent().getExtras();
		
		topicUrl = b.getString("topicUrl");
		topicName = b.getString("topicName");
		
		setTitle(topicName);
		
		threadList = (ListView) findViewById(R.id.threads_feed);
		new Async(ThreadsActivity.this).execute(new String[] {topicUrl, topicName});	
	}
	
	private class Async extends AsyncTask<String[], Void, String>{
		
		private ProgressDialog progressDialog;
		private Activity act;
		private Context con;
		
		public Async(Activity a) {
			this.act = a;
			con = this.act;
			progressDialog = new ProgressDialog(con);
		}
		
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			progressDialog.setMessage("Loading..");
			progressDialog.show();
		}
		
		@Override
		protected String doInBackground(String[]... params) {
			try {
				fthp = new ForumThreadParser(params[0][0]);
				fth = fthp.getThreadList();
				count = fthp.getCount();
			} 
			catch (Exception e) {
				return "";
			}
			return "ok";
		}
		
		@Override
		protected void onPostExecute(String result) {
			if (result.equals("ok"))
				threadList.setAdapter(new ThreadAdapter());
			else{
				//generate error alert dialog
			}

			if (progressDialog.isShowing()) {
	            progressDialog.dismiss();
	        }
		}
		
	}

	
	/*
	 * NE POKAZUJE PRVI ELEMENT
	 */
	
		
	public class ThreadAdapter extends BaseAdapter {
			
        public int getCount(){
			return count + 1;   	
        }
        
        public Object getItem(int position) {
            return position;
        }
        
        public long getItemId(int position) {
            return position;
        }

		
		public int getItemViewType(int position) {
         // Define a way to determine which layout to use, here it's just evens and odds.
        	if (position == getCount()-1){
				return 0;
			}
        	else{
        		return 1;
        	}
        }
		
		 @Override
	        public int getViewTypeCount() {
	         return 2; // Count of different layouts
	        }
  
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			final int pos = position;
			if (v == null){
				LayoutInflater li = getLayoutInflater();
				if (getItemViewType(position) == 0){
					v = li.inflate(R.layout.btn_load_more, null);
					Log.d("APP", "Inflated navigation");
				}
				else{
					v = li.inflate(R.layout.threads_list_row, null);
					Log.d("APP", "THREAD new inflation");
				}
			}
			
			if (position != getCount() - 1){
				TextView threadName = (TextView) v.findViewById(R.id.thread_name);
				TextView threadAuthor = (TextView) v.findViewById(R.id.thread_author);
				TextView threadLastPostInfo = (TextView) v.findViewById(R.id.thread_last_post_info);
				ImageButton goToPage = (ImageButton) v.findViewById(R.id.thread_go_to_page);
				
				//ImageButton favThread = (ImageButton) findViewById(R.id.thread_favorite);
	
				if (fth[position].isTop)
					threadName.setText("TOP " + fth[position].threadName);
				else
					threadName.setText(fth[position].threadName);
				threadAuthor.setText("By: " + fth[position].threadAuthor);
				threadLastPostInfo.setText("Last post: " + fth[position].lastPostInfo);
				Log.d("APP", fth[pos].threadUrl);
				
				threadName.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						Log.d("APP_ONCLICK", fth[pos].threadUrl);
						Intent postActivity = new Intent(getApplicationContext(), PostsActivity.class);
						postActivity.putExtra("threadUrl", fth[pos].threadUrl);
						postActivity.putExtra("threadName", fth[pos].threadName);
						postActivity.putExtra("threadNumOfPages", fth[pos].numOfPages);
						startActivity(postActivity);
						
					}
				});
				
				goToPage.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View arg0) {
						bda = new BaseDialogActivity(ThreadsActivity.this, 2, fth[pos].numOfPages, fth[pos].threadUrl);
						AlertDialog dialog = (AlertDialog) bda.onCreateDialog();
						dialog.show();
						//Toast.makeText(getApplicationContext(), "text", Toast.LENGTH_SHORT).show();
					}
				});
			}
			else{
				ImageView prevPage = (ImageView) v.findViewById(R.id.post_prev_page);
				ImageView findPage = (ImageView) v.findViewById(R.id.post_find_page);
				ImageView nextPage = (ImageView) v.findViewById(R.id.post_next_page);
				
				prevPage.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						Intent goToPrevPage = new Intent(getApplicationContext(), PostsActivity.class);
						goToPrevPage.putExtra("topicUrl", getPrevThreadUrl(topicUrl));
						goToPrevPage.putExtra("topicName", topicName);
						startActivity(goToPrevPage);
						
						
					}
				});
				
				findPage.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						//bda = new BaseDialogActivity(ThreadsActivity.this, 2, threadNumOfPages, cleanUri);
						//AlertDialog dialog = (AlertDialog) bda.onCreateDialog();
						//dialog.show();
					}
				});
				
				nextPage.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						Intent goToNextPage = new Intent(getApplicationContext(), PostsActivity.class);
						goToNextPage.putExtra("topicUrl", getNextThreadUrl(topicUrl));
						goToNextPage.putExtra("topicName", topicName);
						startActivity(goToNextPage);
					}
				});
			}
			
			return v;
		}
	}
	
	
	private String getNextThreadUrl(String url){
		
		if (url.contains("&page=")){
			String[] urlParts = url.split("&page=");
			int currentPage = Integer.parseInt(url.split("&page=")[1]);
			int nextPage = currentPage + 1;
			return urlParts[0] + "&page=" + nextPage;
		}
		else{
			return url + "&order=desc&page=2";
		}
		
	}
	
private String getPrevThreadUrl(String url){
		if (url.contains("&page=")){
			String[] urlParts = url.split("&page=");
			int currentPage = Integer.parseInt(url.split("&page=")[1]);
			int prevPage = currentPage - 1;
			if (prevPage == 1)
				return url;
			return urlParts[0] + "&page=" + prevPage;
		}
		else{
			return url;
		}
		
	}
	
}
