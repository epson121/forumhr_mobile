package fhr.activities;


import fhr.R;
import fhr.adapters.ThreadAdapter;
import fhr.dialogs.BaseDialogActivity;
import fhr.entities.ForumThread;
import fhr.parsers.ForumThreadParser;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class ThreadsActivity extends Activity {
	
	private ListView threadList;
	protected String topicUrl;
	protected String topicName;
	protected ForumThreadParser fthp, moreFthp;
	protected ForumThread[] fth;
	protected int count;
	private int currentPage;
	private Handler reloadHandler;

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_thread);
		final Bundle b = getIntent().getExtras();
		
		reloadHandler = new Handler();
		
		topicUrl = b.getString("topicUrl");
		topicName = b.getString("topicName");
		fhr.adapters.ThreadAdapter.getUri(topicUrl, 3);
		setTitle(topicName);
		
		threadList = (ListView) findViewById(R.id.threads_feed);
		if (Helper.isNetworkAvailable(ThreadsActivity.this)){
			new Async(ThreadsActivity.this).execute(new String[] {topicUrl, topicName});
		}
		else{
			Toast.makeText(getApplicationContext(), "Internet connection not available.", Toast.LENGTH_SHORT).show();
		}
	}
	
	private class Async extends AsyncTask<String[], Void, String>{
		
		private ProgressDialog progressDialog;
		private Activity act;
		private Context con;
		
		public Async(Activity a) {
			this.act = a;
			con = this.act;
			progressDialog = new ProgressDialog(con);
		}
		
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			progressDialog.setMessage("Loading..");
			progressDialog.setCancelable(false);
			progressDialog.setIndeterminate(true);
			progressDialog.show();
		}
		
		@Override
		protected String doInBackground(String[]... params) {
			try {
				fthp = new ForumThreadParser(params[0][0]);
				fth = fthp.getThreadList();
				count = fthp.getCount();
			} 
			catch (Exception e) {
				return "";
			}
			return "ok";
		}
		
		@Override
		protected void onPostExecute(String result) {
			if (result.equals("ok"))
				threadList.setAdapter(new ThreadAdapter(ThreadsActivity.this, count, fth, topicName, topicUrl, currentPage));
			else{
				String[] reloadData = new String[]{topicUrl, topicName, "" };
				Helper h = new Helper(ThreadsActivity.this, 2, reloadData ); 
				reloadHandler.post(h);
			}
			if (progressDialog.isShowing()) {
	            progressDialog.dismiss();
	        }
		}
		
	}	
}
